name: Flask CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  analyze:
    name: CodeQL analysis
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  docker-build-and-push:
    name: Build & Push to Docker Hub
    runs-on: ubuntu-latest
    needs: analyze  # зөвхөн CodeQL амжилттай болсны дараа ажиллана

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: altjin09/flashcard-app:latest
  deploy-to-k3d:
    name: Deploy to k3d
    runs-on: self-hosted
    needs: docker-build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.30.0

      - name: Decode KUBECONFIG
        run: echo "${{ secrets.KUBECONFIG_DATA }}" | base64 -d > kubeconfig.yaml

      - name: Fix kubeconfig server IP
        run: sed -i 's/0.0.0.0/127.0.0.1/g' kubeconfig.yaml

      - name: Deploy to k3d cluster
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig.yaml
          OTEL_EXPORTER_OTLP_ENDPOINT: http://signoz-otel-collector.platform:4317
          OTEL_EXPORTER_OTLP_INSECURE: true
          OTEL_SERVICE_NAME: flask-ci-cd
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml


